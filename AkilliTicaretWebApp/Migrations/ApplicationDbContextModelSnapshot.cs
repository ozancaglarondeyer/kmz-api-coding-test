// <auto-generated />
using System;
using Libraries.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkilliTicaretWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Libraries.Core.Models.Depo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Depo");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ad = "İzmir Depo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5673)
                        },
                        new
                        {
                            Id = 2L,
                            Ad = "İstanbul Depo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5674)
                        },
                        new
                        {
                            Id = 3L,
                            Ad = "Bursa Depo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5675)
                        },
                        new
                        {
                            Id = 4L,
                            Ad = "Ankara Depo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5676)
                        },
                        new
                        {
                            Id = 5L,
                            Ad = "Balıkesir Depo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5677)
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.DepoStok", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("DepoId")
                        .HasColumnType("bigint");

                    b.Property<long>("EnvanterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("StokAdedi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DepoStok");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DepoId = 1L,
                            EnvanterId = 1L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5705),
                            StokAdedi = 180
                        },
                        new
                        {
                            Id = 2L,
                            DepoId = 4L,
                            EnvanterId = 1L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5706),
                            StokAdedi = 200
                        },
                        new
                        {
                            Id = 3L,
                            DepoId = 1L,
                            EnvanterId = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5746),
                            StokAdedi = 350
                        },
                        new
                        {
                            Id = 4L,
                            DepoId = 2L,
                            EnvanterId = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5747),
                            StokAdedi = 25
                        },
                        new
                        {
                            Id = 5L,
                            DepoId = 4L,
                            EnvanterId = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5748),
                            StokAdedi = 48
                        },
                        new
                        {
                            Id = 6L,
                            DepoId = 5L,
                            EnvanterId = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5749),
                            StokAdedi = 96
                        },
                        new
                        {
                            Id = 7L,
                            DepoId = 1L,
                            EnvanterId = 3L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5750),
                            StokAdedi = 50
                        },
                        new
                        {
                            Id = 8L,
                            DepoId = 4L,
                            EnvanterId = 5L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5751),
                            StokAdedi = 400
                        },
                        new
                        {
                            Id = 9L,
                            DepoId = 2L,
                            EnvanterId = 5L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5752),
                            StokAdedi = 83
                        },
                        new
                        {
                            Id = 10L,
                            DepoId = 3L,
                            EnvanterId = 6L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5753),
                            StokAdedi = 60
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.Envanter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("EnvanterAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SatisBirimiId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Envanter");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EnvanterAdi = "Lenovo IdeaPad 1 Intel Celeron N4020 4GB 128GB SSD Freedos 15.6 \" Taşınabilir Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5807),
                            SKU = "82V700A8TX",
                            SatisBirimiId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            EnvanterAdi = "Hp Victus 16-S0022NT Amd R7 7840HS 16GB 512GB SSD RTX4050-6GB Freedos 16.1\" 144 Hz Taşınabilir Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5809),
                            SKU = "7Z588EA",
                            SatisBirimiId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            EnvanterAdi = "Huawei MateBook D15 Intel Core i7 1195G7 16GB 512GB SSD Windows 11 Home 15.6\" FHD Taşınabilir Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5811),
                            SKU = "73V700A8TX",
                            SatisBirimiId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            EnvanterAdi = "Casper Excalibur Intel Core i5 11400F 16GB 500GB SSD GTX1650 Freedos Masaüstü Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5812),
                            SKU = "E65H.114F-BVH0X-0FC",
                            SatisBirimiId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            EnvanterAdi = "Roma Serisi Su Geçirmez Kumaş 17\" Laptop ,notebook Sırt Çantası-Gri",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5813),
                            SKU = "PR-R174",
                            SatisBirimiId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            EnvanterAdi = "TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5814),
                            SKU = "TX-AC-U01",
                            SatisBirimiId = 2L
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.Kategori", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kategori");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ad = "Elektronik",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6105),
                            ParentId = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Ad = "Bilgisayar/Tablet",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6106),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Ad = "Yazıcılar & Projecksiyon",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6149),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Ad = "TV, Görüntü & Ses Sistemleri",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6150),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Ad = "Beyaz Eşya",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6151),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Ad = "Klima ve Isıtıcılar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6152),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Ad = "Elektrikli Ev Aletleri",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6153),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Ad = "Foto & Kamera",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6154),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Ad = "Oyun & Oyun Konsolları",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6155),
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            Ad = "Dizüstü Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6156),
                            ParentId = 2L
                        },
                        new
                        {
                            Id = 11L,
                            Ad = "Tablet",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6157),
                            ParentId = 2L
                        },
                        new
                        {
                            Id = 12L,
                            Ad = "Masaüstü Bilgisayar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6158),
                            ParentId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            Ad = "Yazıcılar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6159),
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 14L,
                            Ad = "Projecksiyon Cihazı",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6160),
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 15L,
                            Ad = "Sarf Malzemeleri",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6161),
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 16L,
                            Ad = "Televizyon",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6162),
                            ParentId = 4L
                        },
                        new
                        {
                            Id = 17L,
                            Ad = "Ev Sinama Sistemleri",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6163),
                            ParentId = 4L
                        },
                        new
                        {
                            Id = 18L,
                            Ad = "Uydu Alıcıları",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6164),
                            ParentId = 4L
                        },
                        new
                        {
                            Id = 19L,
                            Ad = "Notebook",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6165),
                            ParentId = 10L
                        },
                        new
                        {
                            Id = 20L,
                            Ad = "Oyun Bilgisayarları",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6166),
                            ParentId = 10L
                        },
                        new
                        {
                            Id = 21L,
                            Ad = "İkisi Bir Arada",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6167),
                            ParentId = 10L
                        },
                        new
                        {
                            Id = 22L,
                            Ad = "All in One",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6168),
                            ParentId = 12L
                        },
                        new
                        {
                            Id = 23L,
                            Ad = "Masaüstü",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6169),
                            ParentId = 12L
                        },
                        new
                        {
                            Id = 24L,
                            Ad = "Mini Masaüstü",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6170),
                            ParentId = 12L
                        },
                        new
                        {
                            Id = 25L,
                            Ad = "Aksesuarlar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6171),
                            ParentId = 2L
                        },
                        new
                        {
                            Id = 26L,
                            Ad = "Notebook Çantası",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6172),
                            ParentId = 25L
                        },
                        new
                        {
                            Id = 27L,
                            Ad = "Kablolar Çoklayıcılar",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6173),
                            ParentId = 25L
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.Marka", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Marka");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ad = "Lenovo",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5775)
                        },
                        new
                        {
                            Id = 2L,
                            Ad = "Hp",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5776)
                        },
                        new
                        {
                            Id = 3L,
                            Ad = "Huawei",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5777)
                        },
                        new
                        {
                            Id = 4L,
                            Ad = "Monster",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5778)
                        },
                        new
                        {
                            Id = 5L,
                            Ad = "Asus",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5779)
                        },
                        new
                        {
                            Id = 6L,
                            Ad = "MSI",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5780)
                        },
                        new
                        {
                            Id = 7L,
                            Ad = "Casper",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5781)
                        },
                        new
                        {
                            Id = 8L,
                            Ad = "Acer",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5781)
                        },
                        new
                        {
                            Id = 9L,
                            Ad = "Classone",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5783)
                        },
                        new
                        {
                            Id = 10L,
                            Ad = "TX",
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5784)
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.SatisBirimi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<string>("SatisBirimiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SatisBirimi");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5474),
                            Miktar = 1,
                            SatisBirimiAdi = "Adet"
                        },
                        new
                        {
                            Id = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5491),
                            Miktar = 24,
                            SatisBirimiAdi = "Koli 24"
                        },
                        new
                        {
                            Id = 3L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5492),
                            Miktar = 50,
                            SatisBirimiAdi = "Koli 50"
                        },
                        new
                        {
                            Id = 4L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5493),
                            Miktar = 10,
                            SatisBirimiAdi = "Deste"
                        },
                        new
                        {
                            Id = 5L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5494),
                            Miktar = 12,
                            SatisBirimiAdi = "Düzine"
                        },
                        new
                        {
                            Id = 6L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5495),
                            Miktar = 10,
                            SatisBirimiAdi = "Koli 10"
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.SatisFiyati", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("SatisBirimiId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("UrunId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SatisFiyati");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Fiyat = 12999.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5918),
                            SatisBirimiId = 1L,
                            UrunId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            Fiyat = 600.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5920),
                            SatisBirimiId = 6L,
                            UrunId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Fiyat = 17599.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5921),
                            SatisBirimiId = 1L,
                            UrunId = 5L
                        },
                        new
                        {
                            Id = 4L,
                            Fiyat = 16000m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6080),
                            SatisBirimiId = 1L,
                            UrunId = 6L
                        },
                        new
                        {
                            Id = 5L,
                            Fiyat = 22999.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6081),
                            SatisBirimiId = 1L,
                            UrunId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            Fiyat = 299.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6082),
                            SatisBirimiId = 1L,
                            UrunId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            Fiyat = 13500m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6083),
                            SatisBirimiId = 1L,
                            UrunId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Fiyat = 23500m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6084),
                            SatisBirimiId = 1L,
                            UrunId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            Fiyat = 70.99m,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(6085),
                            SatisBirimiId = 1L,
                            UrunId = 4L
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.Urun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urun");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5873),
                            UrunAdi = "Lenovo laptop + TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü + Sırt Çantası"
                        },
                        new
                        {
                            Id = 2L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5882),
                            UrunAdi = "Hp Victus Bilgisayar + TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü"
                        },
                        new
                        {
                            Id = 3L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5889),
                            UrunAdi = "Lenovo IdeaPad 1 Intel Celeron N4020 4GB 128GB SSD Freedos 15.6 \""
                        },
                        new
                        {
                            Id = 4L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5890),
                            UrunAdi = "TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü"
                        },
                        new
                        {
                            Id = 5L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5891),
                            UrunAdi = "Casper Excalibur Intel Core i5 11400F 16GB 500GB SSD GTX1650 Freedos"
                        },
                        new
                        {
                            Id = 6L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5892),
                            UrunAdi = "Huawei MateBook D15 Intel Core i7 1195G7 16GB 512GB SSD Windows 11 Home 15.6\""
                        },
                        new
                        {
                            Id = 7L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5893),
                            UrunAdi = "Hp Victus 16-S0022NT Amd R7 7840HS 16GB 512GB SSD RTX4050-6GB Freedos 16.1\" 144 Hz"
                        },
                        new
                        {
                            Id = 8L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5894),
                            UrunAdi = "Roma Serisi Su Geçirmez Kumaş 17\" Laptop ,notebook Sırt Çantası-Gri"
                        });
                });

            modelBuilder.Entity("Libraries.Core.Models.UrunEnvanter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<long>("EnvanterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("GuncellemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("KategoriId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("MarkaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SilinmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<long>("UrunId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UrunEnvanter");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ad = "Lenovo IdeaPad 1 Intel Celeron N4020 4GB 128GB SSD Freedos 15.6 \"",
                            Adet = 1,
                            EnvanterId = 1L,
                            KategoriId = 19L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5836),
                            MarkaId = 1L,
                            UrunId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            Ad = "Lenovo IdeaPad 1 Intel Celeron N4020 4GB 128GB SSD Freedos 15.6 \"",
                            Adet = 1,
                            EnvanterId = 1L,
                            KategoriId = 19L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5838),
                            MarkaId = 1L,
                            UrunId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Ad = "TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü",
                            Adet = 1,
                            EnvanterId = 6L,
                            KategoriId = 27L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5839),
                            MarkaId = 10L,
                            UrunId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Ad = "Roma Serisi Su Geçirmez Kumaş 17\" Laptop ,notebook Sırt Çantası-Gri",
                            Adet = 2,
                            EnvanterId = 5L,
                            KategoriId = 26L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5840),
                            MarkaId = 9L,
                            UrunId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Ad = "TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü",
                            Adet = 1,
                            EnvanterId = 6L,
                            KategoriId = 27L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5842),
                            MarkaId = 10L,
                            UrunId = 4L
                        },
                        new
                        {
                            Id = 6L,
                            Ad = "Casper Excalibur Intel Core i5 11400F 16GB 500GB SSD GTX1650 Freedos",
                            Adet = 1,
                            EnvanterId = 4L,
                            KategoriId = 23L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5843),
                            MarkaId = 7L,
                            UrunId = 5L
                        },
                        new
                        {
                            Id = 7L,
                            Ad = "Huawei MateBook D15 Intel Core i7 1195G7 16GB 512GB SSD Windows 11 Home 15.6\"",
                            Adet = 1,
                            EnvanterId = 3L,
                            KategoriId = 19L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5846),
                            MarkaId = 3L,
                            UrunId = 6L
                        },
                        new
                        {
                            Id = 8L,
                            Ad = "Hp Victus 16-S0022NT Amd R7 7840HS 16GB 512GB SSD RTX4050-6GB Freedos 16.1\" 144 Hz",
                            Adet = 2,
                            EnvanterId = 1L,
                            KategoriId = 19L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5847),
                            MarkaId = 2L,
                            UrunId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            Ad = "TX Type-C - USB 3.0 OTG USB Flash Dönüştürücü",
                            Adet = 1,
                            EnvanterId = 6L,
                            KategoriId = 27L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5848),
                            MarkaId = 10L,
                            UrunId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            Ad = "Hp Victus 16-S0022NT Amd R7 7840HS 16GB 512GB SSD RTX4050-6GB Freedos 16.1\" 144 Hz",
                            Adet = 1,
                            EnvanterId = 2L,
                            KategoriId = 19L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5850),
                            MarkaId = 2L,
                            UrunId = 7L
                        },
                        new
                        {
                            Id = 11L,
                            Ad = "Roma Serisi Su Geçirmez Kumaş 17\" Laptop ,notebook Sırt Çantası-Gri",
                            Adet = 1,
                            EnvanterId = 5L,
                            KategoriId = 26L,
                            KayitTarih = new DateTime(2023, 11, 19, 22, 50, 35, 699, DateTimeKind.Local).AddTicks(5851),
                            MarkaId = 9L,
                            UrunId = 8L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
